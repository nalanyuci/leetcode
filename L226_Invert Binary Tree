Invert a binary tree.

     4
   /   \
  2     7
 / \   / \
1   3 6   9

to

     4
   /   \
  7     2
 / \   / \
9   6 3   1

Trivia:
This problem was inspired by this original tweet by Max Howell:

	Google: 90% of our engineers use the software you wrote (Homebrew), 
	but you canâ€™t invert a binary tree on a whiteboard so f*** off.

-------------------------------------------------------------------------------------------------------------------------

* 1.my Go version:
//0ms  100%

/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func invertTree(root *TreeNode) *TreeNode {
    if root == nil {
        return root
    }
    tempNode := root.Left
    root.Left = invertTree(root.Right)
    root.Right = invertTree(tempNode)
    return root
}

//It's better to use " root.Left, root.Right = invertTree(root.Right), invertTree(root.Left) "